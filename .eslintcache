[{"/home/thai/Documents/React-ex/src/index.js":"1","/home/thai/Documents/React-ex/src/App.js":"2","/home/thai/Documents/React-ex/src/reportWebVitals.js":"3","/home/thai/Documents/React-ex/src/components/Todo.js":"4","/home/thai/Documents/React-ex/src/components/Input.js":"5","/home/thai/Documents/React-ex/src/components/Filter.js":"6","/home/thai/Documents/React-ex/src/components/TodoItem.js":"7","/home/thai/Documents/React-ex/src/hooks/storage.js":"8","/home/thai/Documents/React-ex/src/lib/util.js":"9","/home/thai/Documents/React-ex/src/hooks/fbStorage.js":"10","/home/thai/Documents/React-ex/src/lib/firebase.js":"11"},{"size":500,"mtime":1621531020968,"results":"12","hashOfConfig":"13"},{"size":275,"mtime":1621588345893,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1621531020968,"results":"15","hashOfConfig":"13"},{"size":1816,"mtime":1621589808592,"results":"16","hashOfConfig":"13"},{"size":783,"mtime":1621589364879,"results":"17","hashOfConfig":"13"},{"size":976,"mtime":1621531020968,"results":"18","hashOfConfig":"13"},{"size":390,"mtime":1621589399347,"results":"19","hashOfConfig":"13"},{"size":655,"mtime":1621531020968,"results":"20","hashOfConfig":"13"},{"size":68,"mtime":1621531020968,"results":"21","hashOfConfig":"13"},{"size":1061,"mtime":1621589509531,"results":"22","hashOfConfig":"13"},{"size":1447,"mtime":1621589542991,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1lhqn3m",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/thai/Documents/React-ex/src/index.js",[],["53","54"],"/home/thai/Documents/React-ex/src/App.js",[],"/home/thai/Documents/React-ex/src/reportWebVitals.js",[],"/home/thai/Documents/React-ex/src/components/Todo.js",["55","56","57","58"],"// import React, { useState } from 'react';\nimport React, { Component } from \"react\";\n/* \n  【Todoのデータ構成】\n　・key：Todoを特定するID（String）\n　・text：Todoの内容（String）\n　・done：完了状態（Boolean true:完了済み,, false:未完了）\n*/\n\n/* コンポーネント */\nimport Input from \"./Input\";\nimport Filter from \"./Filter\";\n\n/* カスタムフック */\n\n\n/* ライブラリ */\nimport { getKey } from \"../lib/util\";\nimport TodoItem from \"./TodoItem\";\nimport useFbStorage from '../hooks/fbStorage';\nimport { getAllByAltText } from \"@testing-library/dom\";\n\n  // const [items, putItems] = React.useState();\n  \nfunction Todo() {\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\n\n  const [filter, setFilter] = React.useState('ALL');\n  const displayItems = items.filter(item => {\n    if (filter === 'ALL') return true;\n    if (filter === 'TODO') return !item.done;\n    if (filter === 'DONE') return item.done;\n  });\n  const handleCheck = checked => {\n    updateItem(checked);\n  };\n\n  const handleAdd = text => {\n    addItem({ text, done: false });\n  };\n  const handleFilterChange = value => setFilter(value);\n  return (\n    <div className=\"panel\">\n      <div className=\"panel-heading\">\n        ITSS ToDoアプリ\n      </div>\n      <Input onAdd={handleAdd} />\n      <Filter\n        onChange={handleFilterChange}\n        value={filter}\n      />\n      {displayItems.map(item => (\n        <TodoItem\n        key={item.id}\n        item={item}\n        onCheck={handleCheck} />\n    ))}\n    <div className=\"panel-block\">\n      {displayItems.length} items\n    </div>\n    <div className=\"panel-block\">\n      <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n        Delete all tasks\n      </button>\n    </div>\n  </div>\n);\n}\nexport default Todo;\n","/home/thai/Documents/React-ex/src/components/Input.js",["59"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input({ onAdd }) {\n  const [text, setText] = React.useState('');\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      onAdd(text);\n      setText('');\n    }\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <input\n        class=\"input\"\n        type=\"text\"\n        placeholder=\"Enter to add\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input;","/home/thai/Documents/React-ex/src/components/Filter.js",["60","61","62"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter(props) {\n  return (\n    <div className=\"panel-tabs\">\n      <div class=\"tabs\">\n        <ul>\n          <li \n            className={props.filter === 'all' ? 'is-active' : ''} \n            onClick={() => {props.filterStatus('all')}}\n            ><a>All</a>\n          </li>\n\n          <li \n            className={props.filter === 'unactive' ? 'is-active' : ''} \n            onClick={() => {props.filterStatus('unactive')}}\n            ><a>Unactive</a>\n          </li>\n\n          <li \n            className={props.filter === 'active' ? 'is-active' : ''} \n            onClick={() => {props.filterStatus('active')}}\n            ><a>Active</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Filter","/home/thai/Documents/React-ex/src/components/TodoItem.js",[],"/home/thai/Documents/React-ex/src/hooks/storage.js",["63","64"],"import { useState, useEffect } from 'react';\n\n/* \n  【Storageフック】\n　・TodoをlocalStorageを使って保存する\n　・以下機能をサポートする\n　  - localstrageに保存されているすべてのTodoの読み出し機能\n　  - Todoをlocalstrageに保存する\n　  - localstrageにあるTodoを削除する\n*/\n\nconst STORAGE_KEY = 'itss-todo';\n\nfunction useStorage() {\n  const [items, setItems] = useState([]);\n　\n　/* 副作用を使う */\n  useEffect(() => {\n    \n  }, []);\n\n  const putItems = items => {\n    \n  };\n\n  const clearItems = () => {\n    \n  };\n\n  return [items, putItems, clearItems];\n}\n\nexport default useStorage;",["65","66"],"/home/thai/Documents/React-ex/src/lib/util.js",[],"/home/thai/Documents/React-ex/src/hooks/fbStorage.js",["67"],"import { useState, useEffect } from 'react';\n\nimport { addFirebaseItem, updateFirebaseItem, getFirebaseItems, clearFirebaseItem } from \"../lib/firebase\";\n\nfunction useFbStorage() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getItems();\n  }, [items]);\n\n  const getItems = async () => {\n    const _items = await getFirebaseItems();\n    setItems(_items);\n  };\n\n  const addItem = async item => {\n    const newItem = { text: item.text, done: item.done };\n    await addFirebaseItem(newItem);\n    setItems([...items, newItem]);\n  };\n\n  const updateItem = async checked => {\n    const changes = { done: !checked.done };\n    await updateFirebaseItem(changes, checked.id);\n    const newItems = items.map((item) => {\n      if (item.id === checked.id) {\n        item = { ...item, changes}\n      }\n      return item;\n    })\n    setItems(newItems);\n  }\n\n  const clearItems = () => {\n    items.map(item => {\n      clearFirebaseItem(item);\n    })\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, clearItems];\n}\n\nexport default useFbStorage;","/home/thai/Documents/React-ex/src/lib/firebase.js",[],{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":2,"column":17,"nodeType":"74","messageId":"75","endLine":2,"endColumn":26},{"ruleId":"72","severity":1,"message":"76","line":18,"column":10,"nodeType":"74","messageId":"75","endLine":18,"endColumn":16},{"ruleId":"72","severity":1,"message":"77","line":21,"column":10,"nodeType":"74","messageId":"75","endLine":21,"endColumn":25},{"ruleId":"78","severity":1,"message":"79","line":29,"column":42,"nodeType":"80","messageId":"81","endLine":29,"endColumn":44},{"ruleId":"72","severity":1,"message":"82","line":1,"column":17,"nodeType":"74","messageId":"75","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":15,"column":14,"nodeType":"85","endLine":15,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":21,"column":14,"nodeType":"85","endLine":21,"endColumn":17},{"ruleId":"83","severity":1,"message":"84","line":27,"column":14,"nodeType":"85","endLine":27,"endColumn":17},{"ruleId":"72","severity":1,"message":"86","line":12,"column":7,"nodeType":"74","messageId":"75","endLine":12,"endColumn":18},{"ruleId":"72","severity":1,"message":"87","line":15,"column":17,"nodeType":"74","messageId":"75","endLine":15,"endColumn":25},{"ruleId":"68","replacedBy":"88"},{"ruleId":"70","replacedBy":"89"},{"ruleId":"78","severity":1,"message":"90","line":36,"column":20,"nodeType":"80","messageId":"91","endLine":36,"endColumn":22},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","'getAllByAltText' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'STORAGE_KEY' is assigned a value but never used.","'setItems' is assigned a value but never used.",["92"],["93"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]